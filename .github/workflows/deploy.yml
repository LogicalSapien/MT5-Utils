name: Deploy to AWS

on:
  workflow_dispatch:
#  push:
#    branches:
#      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: lambda/mt5-utils/package-lock.json

      - name: Create Authoriser Lambda
        working-directory: lambda/authoriser
        run: |
          zip -r authoriser-lambda.zip .

      - name: Install MT5-Utils dependencies
        working-directory: lambda/mt5-utils
        run: npm ci

      - name: Create MT5-Utils Lambda deployment package
        working-directory: lambda/mt5-utils
        run: |
          zip -r mt5-utils-lambda.zip .

      - name: Install Set Webhook For Telegram Bot Lambda dependencies
        working-directory: lambda/set-webhook-for-telegram-bot
        run: npm ci

      - name: Create Set Webhook For Telegram Bot Lambda deployment package
        working-directory: lambda/set-webhook-for-telegram-bot
        run: |
          zip -r set-webhook-for-telegram-bot-lambda.zip .          

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform
